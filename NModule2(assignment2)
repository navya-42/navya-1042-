{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"Module2 (assignment 2)","provenance":[],"authorship_tag":"ABX9TyMXwcSxtmLZgJul7mAX0eIb"},"kernelspec":{"name":"python3","display_name":"Python 3"}},"cells":[{"cell_type":"code","metadata":{"id":"mtmmNq4zV5Wi","colab_type":"code","colab":{}},"source":[" \n","def maximum(a, b, c): \n"," \n","  \n"," \n","    if (a >= b) and (a >= c): \n"," \n","        largest = a \n"," \n","  \n"," \n","    elif (b >= a) and (b >= c): \n"," \n","        largest = b \n"," \n","    else: \n"," \n","        largest = c \n"," \n","          \n"," \n","    return largest \n"," \n","  \n"," \n","  \n"," \n","a = 10\n"," \n","b = 14\n"," \n","c = 12"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"330O5t2IXSRW","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":51},"executionInfo":{"status":"ok","timestamp":1593086816777,"user_tz":-330,"elapsed":1462,"user":{"displayName":"Navya 6303","photoUrl":"","userId":"09921176543440659471"}},"outputId":"cf403a0d-da57-4e25-8513-486172da913a"},"source":[" \n","def reverse(str):\n","    s = \"\"\n","    for ch in str:\n","        s = ch + s\n","    return s\n"," \n"," \n","mystr = \"BeginnersBook\"\n","print(\"Given String: \", mystr)\n"," \n","print(\"Reversed String: \", reverse(mystr))"],"execution_count":null,"outputs":[{"output_type":"stream","text":["Given String:  BeginnersBook\n","Reversed String:  kooBsrennigeB\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"y_t1trEDZGJs","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":150},"executionInfo":{"status":"error","timestamp":1593088633360,"user_tz":-330,"elapsed":1618,"user":{"displayName":"Navya 6303","photoUrl":"","userId":"09921176543440659471"}},"outputId":"4e7ad4bb-c946-446f-e04c-682871a4e104"},"source":["num=int(input('enter the number')) \n","if num>1:\n","  for i in (2,num):\n","      if(num%i)==0:\n","        print(num,'is not prime') \n","          \n","  else:\n","    print(num,'is a prime')\n","else:\n","  print(num,'is not prime')"],"execution_count":null,"outputs":[{"output_type":"error","ename":"SyntaxError","evalue":"ignored","traceback":["\u001b[0;36m  File \u001b[0;32m\"<ipython-input-25-bca049ef64a3>\"\u001b[0;36m, line \u001b[0;32m7\u001b[0m\n\u001b[0;31m    elif:\u001b[0m\n\u001b[0m        ^\u001b[0m\n\u001b[0;31mSyntaxError\u001b[0m\u001b[0;31m:\u001b[0m invalid syntax\n"]}]},{"cell_type":"code","metadata":{"id":"G-6TpAIxe5TD","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":207},"executionInfo":{"status":"ok","timestamp":1593089283553,"user_tz":-330,"elapsed":2415,"user":{"displayName":"Navya 6303","photoUrl":"","userId":"09921176543440659471"}},"outputId":"23bec468-8bf4-4677-92c7-96c3aadad20e"},"source":["import sys\n"," \n","randomList = ['a', 0, 2]\n"," \n","for entry in randomList:\n","    try:\n","        print(\"The entry is\", entry)\n","        r = 1/int(entry)\n","        break\n","    except Exception as e:\n","        print(\"Oops!\", e.__class__, \"occurred.\")\n","        print(\"Next entry.\")\n","        print()\n","print(\"The reciprocal of\",entry, \"is\", r)"],"execution_count":null,"outputs":[{"output_type":"stream","text":["The entry is a\n","Oops! <class 'ValueError'> occurred.\n","Next entry.\n","\n","The entry is 0\n","Oops! <class 'ZeroDivisionError'> occurred.\n","Next entry.\n","\n","The entry is 2\n","The reciprocal of 2 is 0.5\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"dTF9E6p7haXC","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":34},"executionInfo":{"status":"ok","timestamp":1593240487328,"user_tz":-330,"elapsed":2627,"user":{"displayName":"Navya 6303","photoUrl":"","userId":"09921176543440659471"}},"outputId":"384002a8-08f7-4d46-b155-7ada39a21801"},"source":[" \n","def squaresum(n) : \n"," \n","  \n"," \n","   \n"," \n","    sm = 0\n"," \n","    for i in range(1, n+1) : \n"," \n","        sm = sm + (i * i) \n"," \n","      \n"," \n","    return sm \n"," \n","  \n"," \n","n = 4\n"," \n","print(squaresum(n))"],"execution_count":1,"outputs":[{"output_type":"stream","text":["30\n"],"name":"stdout"}]}]}